// A MothKiller bot (copy of haven.automation)

const PBotAPI = Java.type("haven.purus.pbot.PBotAPI");
const PBotInventory = Java.type("haven.purus.pbot.PBotInventory");
const PBotUtils = Java.type("haven.purus.pbot.PBotUtils");
const Inventory = Java.type("haven.Inventory");

main = () => {
	for (inv = PBotAPI.gui.ui.root.lchild; inv != null; inv = inv.rnext()) {
		if(!(inv instanceof Inventory)) continue;
		let container = new PBotInventory(inv);

		let items = container.getInventoryItemsByNames(["Dead Cock", "Silkworm Cocoon", "Death's Head Chrysalis"]);
		if(items == null || items.size() == 0) continue;
		PBotUtils.sysMsg("Found " + items.size() + " to kill.");
		for (let item of items) {
			item.activateItem();
			PBotUtils.waitForFlowerMenu();
			PBotUtils.choosePetal("Kill");
			PBotUtils.closeFlowermenu();
			PBotUtils.waitFlowermenuClose();
		}
	}
	PBotUtils.sysMsg("Done!");
	return;
























	return;


	PBotUtils.sysMsg("Select area with mulberry trees");
	PBotUtils.selectArea();
	let mulberries = javaListToArray(PBotUtils.gobsInArea(PBotUtils.getSelectedAreaA(), PBotUtils.getSelectedAreaB()));
	mulberries = mulberries.filter((gob) => {
		return(gob.getResname() === "gfx/terobjs/trees/mulberry")
	});

	PBotUtils.sysMsg("Select area with leaf stockpiles");
	PBotUtils.selectArea();
	let piles = javaListToArray(PBotUtils.gobsInArea(PBotUtils.getSelectedAreaA(), PBotUtils.getSelectedAreaB()));
	piles = piles.filter((gob) => {
		return(gob.getResname() === "gfx/terobjs/stockpile-leaf")
	});


	PBotUtils.sysMsg("Done!");
}

main();








function startWormKiller() {
    PBotUtils.sysMsg("Start Wors Kills!");
    startWatchBtn.destroy();

    let counter = 0;



	while(!shouldStop()) {
    	counter++;

		//statusLbl.setText("Searching... " + counter);
		//statusLbl.setColor(0, 200, 0);
		changeLabel(statusLbl, "Searching... " + counter, [0, 200, 0]);

		let seconds = ((Date.now()-start)/processed*(gobs.length-processed))/1000;
		const minutes = Math.floor((seconds)/60);
		seconds = Math.floor(seconds%60);
		timeLbl.setText(minutes + " minutes " + seconds + " seconds ");


		let gob = PBotGobAPI.findGobByNames(1000, fodderGobs);
		if(gob == null) {
			PBotUtils.sleep(2000);
			continue;
		}


        markGob(gob);
        goToGob(gob);

		let freeSpace = PBotUtils.playerInventory().freeSlotsInv();
		do {
			if(freeSpace === 0) {
				break;
			}

			while(PBotUtils.playerInventory().freeSlotsInv() === freeSpace || PBotGobAPI.findGobById(gob.getGobId()) != null) {
				PBotUtils.sleep(1000);
				PBotUtils.sysMsg("Wait change inventory");

//gob.doClick(1, 0);
				goToGob(gob);
				continue;
			}
			freeSpace--;

			PBotUtils.sysMsg("WTF?");
			gob = PBotGobAPI.findGobByNames(1000, fodderGobs);
			if(gob == null) {
			    break;
			}
			markGob(gob);
		} while(gob != null || !shouldStop());

        PBotUtils.sysMsg("in while");
        statusLbl.seText('in progress');
	    PBotUtils.sleep(1000);
	}
    PBotUtils.sysMsg("End!");
    window.closeWindow();
}
